// Generated by view binder compiler. Do not edit!
package com.example.e_finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_finance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserinvestmentItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView proname;

  @NonNull
  public final TextView transfusion;

  @NonNull
  public final TextView withdraw;

  private UserinvestmentItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageView, @NonNull TextView proname, @NonNull TextView transfusion,
      @NonNull TextView withdraw) {
    this.rootView = rootView;
    this.imageView = imageView;
    this.proname = proname;
    this.transfusion = transfusion;
    this.withdraw = withdraw;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserinvestmentItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserinvestmentItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.userinvestment_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserinvestmentItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.proname;
      TextView proname = ViewBindings.findChildViewById(rootView, id);
      if (proname == null) {
        break missingId;
      }

      id = R.id.transfusion;
      TextView transfusion = ViewBindings.findChildViewById(rootView, id);
      if (transfusion == null) {
        break missingId;
      }

      id = R.id.withdraw;
      TextView withdraw = ViewBindings.findChildViewById(rootView, id);
      if (withdraw == null) {
        break missingId;
      }

      return new UserinvestmentItemBinding((ConstraintLayout) rootView, imageView, proname,
          transfusion, withdraw);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
