// Generated by view binder compiler. Do not edit!
package com.example.e_finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_finance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProjectionItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline9;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView proname;

  @NonNull
  public final TextView rate;

  @NonNull
  public final TextView tv1;

  private ProjectionItemBinding(@NonNull ConstraintLayout rootView, @NonNull Guideline guideline9,
      @NonNull ImageView imageView, @NonNull TextView proname, @NonNull TextView rate,
      @NonNull TextView tv1) {
    this.rootView = rootView;
    this.guideline9 = guideline9;
    this.imageView = imageView;
    this.proname = proname;
    this.rate = rate;
    this.tv1 = tv1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProjectionItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProjectionItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.projection_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProjectionItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline9;
      Guideline guideline9 = ViewBindings.findChildViewById(rootView, id);
      if (guideline9 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.proname;
      TextView proname = ViewBindings.findChildViewById(rootView, id);
      if (proname == null) {
        break missingId;
      }

      id = R.id.rate;
      TextView rate = ViewBindings.findChildViewById(rootView, id);
      if (rate == null) {
        break missingId;
      }

      id = R.id.tv1;
      TextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      return new ProjectionItemBinding((ConstraintLayout) rootView, guideline9, imageView, proname,
          rate, tv1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
