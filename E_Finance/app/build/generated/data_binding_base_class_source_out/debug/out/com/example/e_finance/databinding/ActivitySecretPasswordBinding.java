// Generated by view binder compiler. Do not edit!
package com.example.e_finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_finance.R;
import com.kyleduo.switchbutton.SwitchButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySecretPasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SwitchButton SecretSwitch;

  @NonNull
  public final TextView Setting;

  @NonNull
  public final ImageView img1;

  @NonNull
  public final ImageView img2;

  @NonNull
  public final ConstraintLayout layout;

  @NonNull
  public final ImageView pgbar;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView tv2;

  private ActivitySecretPasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull SwitchButton SecretSwitch, @NonNull TextView Setting, @NonNull ImageView img1,
      @NonNull ImageView img2, @NonNull ConstraintLayout layout, @NonNull ImageView pgbar,
      @NonNull TextView textView, @NonNull TextView tv2) {
    this.rootView = rootView;
    this.SecretSwitch = SecretSwitch;
    this.Setting = Setting;
    this.img1 = img1;
    this.img2 = img2;
    this.layout = layout;
    this.pgbar = pgbar;
    this.textView = textView;
    this.tv2 = tv2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySecretPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySecretPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_secret_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySecretPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Secret_Switch;
      SwitchButton SecretSwitch = ViewBindings.findChildViewById(rootView, id);
      if (SecretSwitch == null) {
        break missingId;
      }

      id = R.id.Setting;
      TextView Setting = ViewBindings.findChildViewById(rootView, id);
      if (Setting == null) {
        break missingId;
      }

      id = R.id.img1;
      ImageView img1 = ViewBindings.findChildViewById(rootView, id);
      if (img1 == null) {
        break missingId;
      }

      id = R.id.img2;
      ImageView img2 = ViewBindings.findChildViewById(rootView, id);
      if (img2 == null) {
        break missingId;
      }

      id = R.id.layout;
      ConstraintLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.pgbar;
      ImageView pgbar = ViewBindings.findChildViewById(rootView, id);
      if (pgbar == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.tv2;
      TextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      return new ActivitySecretPasswordBinding((ConstraintLayout) rootView, SecretSwitch, Setting,
          img1, img2, layout, pgbar, textView, tv2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
