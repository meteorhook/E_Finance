// Generated by view binder compiler. Do not edit!
package com.example.e_finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bin.david.form.core.SmartTable;
import com.example.e_finance.MyLineChart;
import com.example.e_finance.R;
import com.github.mikephil.charting.charts.PieChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStatisticsChartBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView Next;

  @NonNull
  public final ImageView Previous;

  @NonNull
  public final TextView balance;

  @NonNull
  public final TextView balanceNum;

  @NonNull
  public final ConstraintLayout balancebg;

  @NonNull
  public final LinearLayout chartContainview;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView income;

  @NonNull
  public final TextView incomeNum;

  @NonNull
  public final ConstraintLayout incomebg;

  @NonNull
  public final ImageView ledgerdown;

  @NonNull
  public final MyLineChart lineChart;

  @NonNull
  public final LinearLayout linearlayout;

  @NonNull
  public final ConstraintLayout linechartView;

  @NonNull
  public final ImageView notChart;

  @NonNull
  public final TextView notCharttext;

  @NonNull
  public final TextView pay;

  @NonNull
  public final TextView payNum;

  @NonNull
  public final ConstraintLayout paybg;

  @NonNull
  public final ImageView pgbar;

  @NonNull
  public final PieChart pieChart;

  @NonNull
  public final ConstraintLayout piechartView;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final SmartTable table;

  @NonNull
  public final ConstraintLayout tableView;

  @NonNull
  public final TextView tv1;

  @NonNull
  public final TextView tv2;

  @NonNull
  public final TextView tv3;

  @NonNull
  public final RecyclerView typeStatistics;

  @NonNull
  public final View v1;

  @NonNull
  public final View v2;

  @NonNull
  public final View v3;

  private FragmentStatisticsChartBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView Next, @NonNull ImageView Previous, @NonNull TextView balance,
      @NonNull TextView balanceNum, @NonNull ConstraintLayout balancebg,
      @NonNull LinearLayout chartContainview, @NonNull TextView date, @NonNull TextView income,
      @NonNull TextView incomeNum, @NonNull ConstraintLayout incomebg,
      @NonNull ImageView ledgerdown, @NonNull MyLineChart lineChart,
      @NonNull LinearLayout linearlayout, @NonNull ConstraintLayout linechartView,
      @NonNull ImageView notChart, @NonNull TextView notCharttext, @NonNull TextView pay,
      @NonNull TextView payNum, @NonNull ConstraintLayout paybg, @NonNull ImageView pgbar,
      @NonNull PieChart pieChart, @NonNull ConstraintLayout piechartView,
      @NonNull ScrollView scrollView, @NonNull SmartTable table,
      @NonNull ConstraintLayout tableView, @NonNull TextView tv1, @NonNull TextView tv2,
      @NonNull TextView tv3, @NonNull RecyclerView typeStatistics, @NonNull View v1,
      @NonNull View v2, @NonNull View v3) {
    this.rootView = rootView;
    this.Next = Next;
    this.Previous = Previous;
    this.balance = balance;
    this.balanceNum = balanceNum;
    this.balancebg = balancebg;
    this.chartContainview = chartContainview;
    this.date = date;
    this.income = income;
    this.incomeNum = incomeNum;
    this.incomebg = incomebg;
    this.ledgerdown = ledgerdown;
    this.lineChart = lineChart;
    this.linearlayout = linearlayout;
    this.linechartView = linechartView;
    this.notChart = notChart;
    this.notCharttext = notCharttext;
    this.pay = pay;
    this.payNum = payNum;
    this.paybg = paybg;
    this.pgbar = pgbar;
    this.pieChart = pieChart;
    this.piechartView = piechartView;
    this.scrollView = scrollView;
    this.table = table;
    this.tableView = tableView;
    this.tv1 = tv1;
    this.tv2 = tv2;
    this.tv3 = tv3;
    this.typeStatistics = typeStatistics;
    this.v1 = v1;
    this.v2 = v2;
    this.v3 = v3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStatisticsChartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStatisticsChartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_statistics_chart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStatisticsChartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Next;
      ImageView Next = ViewBindings.findChildViewById(rootView, id);
      if (Next == null) {
        break missingId;
      }

      id = R.id.Previous;
      ImageView Previous = ViewBindings.findChildViewById(rootView, id);
      if (Previous == null) {
        break missingId;
      }

      id = R.id.balance;
      TextView balance = ViewBindings.findChildViewById(rootView, id);
      if (balance == null) {
        break missingId;
      }

      id = R.id.balanceNum;
      TextView balanceNum = ViewBindings.findChildViewById(rootView, id);
      if (balanceNum == null) {
        break missingId;
      }

      id = R.id.balancebg;
      ConstraintLayout balancebg = ViewBindings.findChildViewById(rootView, id);
      if (balancebg == null) {
        break missingId;
      }

      id = R.id.chartContainview;
      LinearLayout chartContainview = ViewBindings.findChildViewById(rootView, id);
      if (chartContainview == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.income;
      TextView income = ViewBindings.findChildViewById(rootView, id);
      if (income == null) {
        break missingId;
      }

      id = R.id.incomeNum;
      TextView incomeNum = ViewBindings.findChildViewById(rootView, id);
      if (incomeNum == null) {
        break missingId;
      }

      id = R.id.incomebg;
      ConstraintLayout incomebg = ViewBindings.findChildViewById(rootView, id);
      if (incomebg == null) {
        break missingId;
      }

      id = R.id.ledgerdown;
      ImageView ledgerdown = ViewBindings.findChildViewById(rootView, id);
      if (ledgerdown == null) {
        break missingId;
      }

      id = R.id.lineChart;
      MyLineChart lineChart = ViewBindings.findChildViewById(rootView, id);
      if (lineChart == null) {
        break missingId;
      }

      id = R.id.linearlayout;
      LinearLayout linearlayout = ViewBindings.findChildViewById(rootView, id);
      if (linearlayout == null) {
        break missingId;
      }

      id = R.id.linechartView;
      ConstraintLayout linechartView = ViewBindings.findChildViewById(rootView, id);
      if (linechartView == null) {
        break missingId;
      }

      id = R.id.notChart;
      ImageView notChart = ViewBindings.findChildViewById(rootView, id);
      if (notChart == null) {
        break missingId;
      }

      id = R.id.notCharttext;
      TextView notCharttext = ViewBindings.findChildViewById(rootView, id);
      if (notCharttext == null) {
        break missingId;
      }

      id = R.id.pay;
      TextView pay = ViewBindings.findChildViewById(rootView, id);
      if (pay == null) {
        break missingId;
      }

      id = R.id.payNum;
      TextView payNum = ViewBindings.findChildViewById(rootView, id);
      if (payNum == null) {
        break missingId;
      }

      id = R.id.paybg;
      ConstraintLayout paybg = ViewBindings.findChildViewById(rootView, id);
      if (paybg == null) {
        break missingId;
      }

      id = R.id.pgbar;
      ImageView pgbar = ViewBindings.findChildViewById(rootView, id);
      if (pgbar == null) {
        break missingId;
      }

      id = R.id.pieChart;
      PieChart pieChart = ViewBindings.findChildViewById(rootView, id);
      if (pieChart == null) {
        break missingId;
      }

      id = R.id.piechartView;
      ConstraintLayout piechartView = ViewBindings.findChildViewById(rootView, id);
      if (piechartView == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.table;
      SmartTable table = ViewBindings.findChildViewById(rootView, id);
      if (table == null) {
        break missingId;
      }

      id = R.id.tableView;
      ConstraintLayout tableView = ViewBindings.findChildViewById(rootView, id);
      if (tableView == null) {
        break missingId;
      }

      id = R.id.tv1;
      TextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      id = R.id.tv2;
      TextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      id = R.id.tv3;
      TextView tv3 = ViewBindings.findChildViewById(rootView, id);
      if (tv3 == null) {
        break missingId;
      }

      id = R.id.typeStatistics;
      RecyclerView typeStatistics = ViewBindings.findChildViewById(rootView, id);
      if (typeStatistics == null) {
        break missingId;
      }

      id = R.id.v1;
      View v1 = ViewBindings.findChildViewById(rootView, id);
      if (v1 == null) {
        break missingId;
      }

      id = R.id.v2;
      View v2 = ViewBindings.findChildViewById(rootView, id);
      if (v2 == null) {
        break missingId;
      }

      id = R.id.v3;
      View v3 = ViewBindings.findChildViewById(rootView, id);
      if (v3 == null) {
        break missingId;
      }

      return new FragmentStatisticsChartBinding((ConstraintLayout) rootView, Next, Previous,
          balance, balanceNum, balancebg, chartContainview, date, income, incomeNum, incomebg,
          ledgerdown, lineChart, linearlayout, linechartView, notChart, notCharttext, pay, payNum,
          paybg, pgbar, pieChart, piechartView, scrollView, table, tableView, tv1, tv2, tv3,
          typeStatistics, v1, v2, v3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
