// Generated by view binder compiler. Do not edit!
package com.example.e_finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_finance.R;
import com.kyleduo.switchbutton.SwitchButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BillInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SwitchButton CycleSwitch;

  @NonNull
  public final View ItemColor;

  @NonNull
  public final ImageView ItemLogo;

  @NonNull
  public final TextView Num;

  @NonNull
  public final TextView Project;

  @NonNull
  public final TextView cycleDate;

  @NonNull
  public final ConstraintLayout layout1;

  @NonNull
  public final ConstraintLayout layout2;

  @NonNull
  public final View line;

  @NonNull
  public final TextView note;

  @NonNull
  public final TextView tv1;

  private BillInfoBinding(@NonNull ConstraintLayout rootView, @NonNull SwitchButton CycleSwitch,
      @NonNull View ItemColor, @NonNull ImageView ItemLogo, @NonNull TextView Num,
      @NonNull TextView Project, @NonNull TextView cycleDate, @NonNull ConstraintLayout layout1,
      @NonNull ConstraintLayout layout2, @NonNull View line, @NonNull TextView note,
      @NonNull TextView tv1) {
    this.rootView = rootView;
    this.CycleSwitch = CycleSwitch;
    this.ItemColor = ItemColor;
    this.ItemLogo = ItemLogo;
    this.Num = Num;
    this.Project = Project;
    this.cycleDate = cycleDate;
    this.layout1 = layout1;
    this.layout2 = layout2;
    this.line = line;
    this.note = note;
    this.tv1 = tv1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BillInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BillInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bill_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BillInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CycleSwitch;
      SwitchButton CycleSwitch = ViewBindings.findChildViewById(rootView, id);
      if (CycleSwitch == null) {
        break missingId;
      }

      id = R.id.ItemColor;
      View ItemColor = ViewBindings.findChildViewById(rootView, id);
      if (ItemColor == null) {
        break missingId;
      }

      id = R.id.ItemLogo;
      ImageView ItemLogo = ViewBindings.findChildViewById(rootView, id);
      if (ItemLogo == null) {
        break missingId;
      }

      id = R.id.Num;
      TextView Num = ViewBindings.findChildViewById(rootView, id);
      if (Num == null) {
        break missingId;
      }

      id = R.id.Project;
      TextView Project = ViewBindings.findChildViewById(rootView, id);
      if (Project == null) {
        break missingId;
      }

      id = R.id.cycleDate;
      TextView cycleDate = ViewBindings.findChildViewById(rootView, id);
      if (cycleDate == null) {
        break missingId;
      }

      id = R.id.layout1;
      ConstraintLayout layout1 = ViewBindings.findChildViewById(rootView, id);
      if (layout1 == null) {
        break missingId;
      }

      id = R.id.layout2;
      ConstraintLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.note;
      TextView note = ViewBindings.findChildViewById(rootView, id);
      if (note == null) {
        break missingId;
      }

      id = R.id.tv1;
      TextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      return new BillInfoBinding((ConstraintLayout) rootView, CycleSwitch, ItemColor, ItemLogo, Num,
          Project, cycleDate, layout1, layout2, line, note, tv1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
