// Generated by view binder compiler. Do not edit!
package com.example.e_finance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.e_finance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFamilyOriginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button confirm;

  @NonNull
  public final Button create;

  @NonNull
  public final ConstraintLayout createfamily;

  @NonNull
  public final EditText familyid;

  @NonNull
  public final EditText familyname;

  @NonNull
  public final EditText familynum;

  @NonNull
  public final ConstraintLayout joinfamily;

  @NonNull
  public final ImageView pgbar;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  private FragmentFamilyOriginBinding(@NonNull ConstraintLayout rootView, @NonNull Button confirm,
      @NonNull Button create, @NonNull ConstraintLayout createfamily, @NonNull EditText familyid,
      @NonNull EditText familyname, @NonNull EditText familynum,
      @NonNull ConstraintLayout joinfamily, @NonNull ImageView pgbar, @NonNull TextView textView1,
      @NonNull TextView textView2, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.confirm = confirm;
    this.create = create;
    this.createfamily = createfamily;
    this.familyid = familyid;
    this.familyname = familyname;
    this.familynum = familynum;
    this.joinfamily = joinfamily;
    this.pgbar = pgbar;
    this.textView1 = textView1;
    this.textView2 = textView2;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFamilyOriginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFamilyOriginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_family_origin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFamilyOriginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confirm;
      Button confirm = ViewBindings.findChildViewById(rootView, id);
      if (confirm == null) {
        break missingId;
      }

      id = R.id.create;
      Button create = ViewBindings.findChildViewById(rootView, id);
      if (create == null) {
        break missingId;
      }

      id = R.id.createfamily;
      ConstraintLayout createfamily = ViewBindings.findChildViewById(rootView, id);
      if (createfamily == null) {
        break missingId;
      }

      id = R.id.familyid;
      EditText familyid = ViewBindings.findChildViewById(rootView, id);
      if (familyid == null) {
        break missingId;
      }

      id = R.id.familyname;
      EditText familyname = ViewBindings.findChildViewById(rootView, id);
      if (familyname == null) {
        break missingId;
      }

      id = R.id.familynum;
      EditText familynum = ViewBindings.findChildViewById(rootView, id);
      if (familynum == null) {
        break missingId;
      }

      id = R.id.joinfamily;
      ConstraintLayout joinfamily = ViewBindings.findChildViewById(rootView, id);
      if (joinfamily == null) {
        break missingId;
      }

      id = R.id.pgbar;
      ImageView pgbar = ViewBindings.findChildViewById(rootView, id);
      if (pgbar == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new FragmentFamilyOriginBinding((ConstraintLayout) rootView, confirm, create,
          createfamily, familyid, familyname, familynum, joinfamily, pgbar, textView1, textView2,
          textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
